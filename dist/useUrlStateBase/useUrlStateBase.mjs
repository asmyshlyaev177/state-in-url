import u from"react";import{TIMEOUT as L}from"../constants/constants.mjs";import{useInsertionEffect as T}from"../useInsertionEffect.mjs";import{useSharedState as v}from"../useSharedState/useSharedState.mjs";import{useUrlEncode as y}from"../useUrlEncode/useUrlEncode.mjs";import{filterUnknownParamsClient as R}from"../utils.mjs";function b(t,a,l){const{parse:s,stringify:o}=y(t),{state:c,getState:n,setState:r}=v(t,()=>l?.({parse:s})||t),m=u.useRef(void 0);T(()=>{const e=()=>{const f=s(R(t));r(f)};return window.addEventListener(U,e),()=>{window.removeEventListener(U,e),clearTimeout(m.current)}},[r]);const i=u.useRef([]),p=u.useCallback((e,f)=>{const d=typeof e=="function"?e(n()):{...n(),...e},h=o(d,C(t)),S=`${window.location.pathname}${h.length?"?":""}${h}${window.location.hash}`,g=`${window.location.pathname}${window.location.search}${window.location.hash}`;if(S===g)return;r(d);const{replace:k,...E}=f||{};i.current.push([k?"replace":"push",S,E]),clearTimeout(m.current),queueMicrotask(()=>{i.current.length&&(m.current=setTimeout(()=>{const w=i.current.at(-1);i.current=[],a[w[0]](w[1],w[2])},L))})},[a,o,n]),$=u.useCallback(e=>{r(t),p(t,e)},[p,r]);return{updateState:r,updateUrl:p,state:c,reset:$,getState:n}}function C(t){const a=Object.keys(t),l=window.location.search,s=new URLSearchParams(l),o=new URLSearchParams;for(const[c,n]of s)!a.includes(c)&&o.set(c,n);return o}const U="popstate";export{b as useUrlStateBase};
