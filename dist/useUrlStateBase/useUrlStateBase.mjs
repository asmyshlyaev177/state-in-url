import w from"react";import{TIMEOUT as L}from"../constants/constants.mjs";import{useInsertionEffect as P}from"../useInsertionEffect.mjs";import{useSharedState as T}from"../useSharedState/useSharedState.mjs";import{useUrlEncode as b}from"../useUrlEncode/useUrlEncode.mjs";import{popstateEv as g,filterUnknownParamsClient as C,getSearch as O}from"../utils.mjs";let a;function R(t,e,u,l){const{parse:n,stringify:r}=b(t);const{state:f,getState:c,setState:s}=T(t,()=>u?.({parse:n})||t);P(()=>{const o=()=>{const d=n(C(t,O()));s(d)};window.addEventListener(g,o);return()=>{window.removeEventListener(g,o)}},[]);const m=w.useRef([]);const p=w.useCallback((o,d)=>{const h=typeof o==="function"?o(c(),t):{...c(),...o};const S=r(h,B(t));const U=I(window.location.pathname,l);const $=`${U}${S.length?"?":""}${S}${window.location.hash}`;const E=`${U}${window.location.search}${window.location.hash}`;if($===E)return;s(h);const{replace:k,...y}=d||{};m.current=[[k?"replace":"push",$,y]];clearTimeout(a);a=void 0;const i=m.current.filter(Boolean).at(-1);if(i){a=setTimeout(()=>{m.current=[];e[i[0]](i[1],i[2]);a=void 0},L)}},[e,r,c]);const v=w.useCallback(o=>{s(t);p(t,o)},[p,s]);return{updateState:s,updateUrl:p,state:f,reset:v,getState:c,pendingUrlUpdate:()=>a!==void 0}}function B(t){const e=Object.keys(t);const u=window.location.search;const l=new URLSearchParams(u);const n=new URLSearchParams;for(const[r,f]of l){!e.includes(r)&&n.set(r,f)}return n}function I(t,e){if(!e||e==="/"){return t}return t.slice(e.length)}export{R as useUrlStateBase};
